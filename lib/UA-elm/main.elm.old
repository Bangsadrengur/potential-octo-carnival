module Main exposing(..)

import Html exposing (..)
import Html.Attributes exposing (..)
import List exposing (..)

type alias Chapter =
  { name : String
  , number : String
  , date : String
  , serieUrlName : String
  }
type alias Chapter_ =
  { name : String
  , number : String
  , date : String
  }
type alias Serie =
  { name : String
  , urlName : String
  , chapters : List Chapter_
  }
type alias RecentFavoriteSeries =
  { serie : String
  , lastFive : List Chapter_
  }

formatHeader = h1 [] [ text "Manga Now (sh)" ]
formatChapter : Chapter -> Html msg
formatChapter chapter =
  li []
    [ a [ href <| "/browse/series/" ++ chapter.serieUrlName ++ "/chapters/" ++ chapter.number ++ "/pages/1" ]
      [ text (chapter.number ++ " - " ++ chapter.name ++ " - " ++ chapter.date)
      ]
    ]
formatChapters : Serie -> List (Html msg)
formatChapters serie = List.map formatChapter
  (List.map (\chapter -> 
    { name = chapter.name
    , number = chapter.number
    , date = chapter.date
    , serieUrlName = serie.urlName
    }) serie.chapters)
formatSerie : Serie -> Html msg
formatSerie serie = div []
  [ h2 [] [ text (.name serie) ]
  , ul [] (formatChapters serie)
  ]
formatSeries : List Serie -> Html msg
formatSeries series = div [] (List.map formatSerie series)

getRecentFavorites : List Serie
getRecentFavorites =
  [ { name = "One Piece", urlName = "one-piece", chapters = [ { name = "Name", number = "1", date = "Today"} ] }
  , { name = "Yatta!", urlName = "one-piece", chapters = [ { name = "Name", number = "1", date = "Yesterday" } ] }
  ]

main =
  body []
  [ h1 [] [ text "Manga Now (sh)"]
  , formatSeries getRecentFavorites
  ]
